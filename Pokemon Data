#In this SQL code, I'm querying database created that holds Pokemon data to answer questions about the data. 

CREATE TABLE Pokemon (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  Name TEXT,
  Type_1 TEXT,
  Type_2 TEXT,
  HP INTEGER,
  Attack INTEGER,
  Defense INTEGER,
  Sp_Atk INTEGER,
  Sp_Def INTEGER,
  Speed INTEGER
);

INSERT INTO Pokemon (Name, Type_1, Type_2, HP, Attack, Defense, Sp_Atk, Sp_Def, Speed)
VALUES
('Venusaur','Grass','Poison', 80,82,83,100,100,80),
('Charizard','Fire','Flying',78,84,78,109,85,100),
('Blastoise','Water',NULL, 79,83,100,85,105,78),
('Butterfree','Bug','Flying', 60,45,50,90,80,70),
('Weedle','Bug','Poison',40,35,30,20,20,50),
('Pidgeot','Normal','Flying',83,80,75,70,70,101),
('Raticate','Normal',NULL,55,81,60,50,70,97),
('Fearow','Normal','Flying',65,90,65,61,61,100),
('Ekans','Poison',NULL,35,60,44,40,54,55),
('Raichu','Electric',NULL, 60,90,55,90,80,110),
('Sandslash','Ground',NULL,75,100,110,45,55,65),
('Nidoqueen','Poison','Ground',90,92,87,75,85,76),
('Clefable','Fairy',NULL,95,70,73,95,90,60),
('Vulpix','Fire',NULL,38,41,40,50,65,65),
('Jigglypuff','Normal','Fairy',115,45,20,45,25,20),
('Zubat','Poison','Flying',40,45,35,30,40,55),
('Vileplume','Grass','Poison',75,80,85,110,90,50),
('Paras','Bug','Grass',35,70,55,45,55,25),
('Venomoth','Bug','Poison',70,65,60,90,75,90),
('Dugtrio','Ground',NULL,35,80,50,50,70,120),
('Meowth','Normal',NULL,40,45,35,40,40,90),
('Psyduck','Water',NULL,50,52,48,65,50,55),
('Primeape','Fighting',NULL,65,105,60,60,70,95),
('Arcanine','Fire',NULL,90,110,80,100,80,95),
('Alakazam','Psychic',NULL,55,50,45,135,95,120),  
('Machamp','Fighting',NULL,90,130,80,65,85,55),  
('Victreebel','Grass','Poison',80,105,65,100,70,70),
('Tentacool','Water','Poison',40,40,35,50,100,70),
('Golem','Rock','Ground',80,120,130,55,65,45);

SELECT * FROM Pokemon;

--Breakdown of null values in Type_2 column based on each certain Type_1 category
SELECT
  Type_1,
  COUNT(*) AS Total_Count,
  COUNT(Type_2) AS Non_Null_Count,
  (COUNT(*) - COUNT(Type_2)) AS Null_Count
FROM Pokemon
GROUP BY Type_1;

--Average values for each combination of Type_1
SELECT 
  Type_1,
  Round(AVG(HP)) AS Average_HP,
  Round(AVG(Attack)) AS Average_Attack,
  Round(AVG(Defense)) AS Average_Defense,
  Round(AVG(Sp_Atk)) AS Average_Sp_Atk,
  Round(AVG(Sp_Def)) AS Average_Sp_Def,
  Round(AVG(Speed)) AS Average_Speed
FROM Pokemon
GROUP BY Type_1;

--Categorize the Pokemon based on their Total_Power
SELECT
  Name,
  (HP + Attack + Defense + Sp_Atk + Sp_Def + Speed) AS Total_Power,
  CASE
    WHEN (HP + Attack + Defense + Sp_Atk + Sp_Def + Speed) < 300 THEN 'Weak'
    WHEN (HP + Attack + Defense + Sp_Atk + Sp_Def + Speed) <= 500 THEN 'Normal'
    ELSE 'Strong'
    END AS Power_Category
FROM Pokemon
GROUP BY name;

--Narrow down Pokemon
SELECT Name, Type_1, Type_2, Attack, Defense
FROM Pokemon
WHERE (Type_1 = 'Fire' AND Type_2 = 'Flying')
   OR (Attack >= 100 AND Defense >= 100);
